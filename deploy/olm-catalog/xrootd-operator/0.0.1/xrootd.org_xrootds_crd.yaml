apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: xrootds.xrootd.org
spec:
  group: xrootd.org
  names:
    kind: Xrootd
    listKind: XrootdList
    plural: xrootds
    singular: xrootd
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Xrootd is the Schema for the xrootds API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: XrootdSpec defines the desired state of Xrootd
          properties:
            config:
              description: XrootdConfigSpec defines the config spec used to generate
                xrootd.cf
              type: object
            redirector:
              description: XrootdRedirectorSpec defines the desired state of Xrootd
                redirectors
              properties:
                image:
                  description: Image must have a tag
                  pattern: .+:.+
                  type: string
                replicas:
                  format: int32
                  minimum: 1
                  type: integer
              type: object
            worker:
              description: XrootdWorkerSpec defines the desired state of Xrootd workers
              properties:
                image:
                  description: Image must have a tag
                  pattern: .+:.+
                  type: string
                replicas:
                  format: int32
                  minimum: 1
                  type: integer
                storage:
                  description: XrootdStorageSpec defines the storage spec of Xrootd
                    workers
                  properties:
                    capacity:
                      description: Capacity must be a storage capacity and should
                        be a valid quantity (ex, 1Gi)
                      type: string
                    class:
                      description: Class must be a storage class
                      type: string
                  type: object
              type: object
          type: object
        status:
          description: XrootdStatus defines the observed state of Xrootd
          properties:
            conditions:
              description: ReconcileStatus this is the general status of the main
                reconciler
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            lockedResourceStatuses:
              additionalProperties:
                description: Conditions is a set of Condition instances.
                items:
                  description: "Condition represents an observation of an object's
                    state. Conditions are an extension mechanism intended to be used
                    when the details of an observation are not a priori known or would
                    not apply to all instances of a given Kind. \n Conditions should
                    be added to explicitly convey properties that users and components
                    care about rather than requiring those properties to be inferred
                    from other observations. Once defined, the meaning of a Condition
                    can not be changed arbitrarily - it becomes part of the API, and
                    has the same backwards- and forwards-compatibility concerns of
                    any other part of the API."
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      description: ConditionReason is intended to be a one-word, CamelCase
                        representation of the category of cause of the current status.
                        It is intended to be used in concise output, such as one-line
                        kubectl get output, and in summarizing occurrences of causes.
                      type: string
                    status:
                      type: string
                    type:
                      description: "ConditionType is the type of the condition and
                        is typically a CamelCased word or short phrase. \n Condition
                        types should indicate state in the \"abnormal-true\" polarity.
                        For example, if the condition indicates when a policy is invalid,
                        the \"is valid\" case is probably the norm, so the condition
                        should be called \"Invalid\"."
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              description: LockedResourceStatuses contains the reconcile status for
                each of the managed resources
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
